package Chapter4;


    public class Triangle {
        private double side1;
        private double side2;
        private double side3;


        public Triangle() {
            side1 = side2 = side3 = 1.0;
        }

        public Triangle(double side1, double side2, double side3)
                throws IllegalTriangleSideException {
            if (side1 + side2 <= side3 ||
                    side1 + side3 <= side2 ||
                    side2 + side3 <= side1)
                throw new IllegalTriangleSideException(side1, side2, side3);
            this.side1 = side1;
            this.side2 = side2;
            this.side3 = side3;
        }

        public double getSide1() {
            return side1;
        }
        public double getSide2() {
            return side2;
        }
        public double getSide3() {
            return side3;
        }
        public boolean checkSides(double side1, double side2, double side3)
                throws IllegalTriangleSideException {
            if (side1 + side2 >= side3 ||
                    side1 + side3 >= side2 ||
                    side2 + side3 >= side1)
                throw new IllegalTriangleSideException(side1, side2, side3);
            return true;
            }


        public double getArea() {
            double x = (side1 + side2 + side3) / 2;
            return Math.sqrt(x * (x - side1) * (x - side2) * (x - side3));
        }

        public double getPerimeter() {
            return side1 + side2 + side3;
        }
        @Override
        public String toString() {
            return "Triangle: side1 = " + side1 + " side2 = " + side2 +
                    " side3 = " + side3;
        }
    
    
